using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

public class Node{

    public int count {get;set;}
    Node[] children ;//= /new Node[26];
    
    public Node()
    {
        count = 0;
        children  = new Node[26];
    }
    
    public Node getNode(int charIndex)
    {
        return children[charIndex];
    }
    
    public void setNode(int charIndex, Node newNode)
    {
        children[charIndex] = newNode;
        return;
    }
    
     public void addNewContact(string contact, int contactCharIndex)
    {        
        addChToTries(contact, 0);
    }
    
    public bool addChToTries(string contact, int index)
    {
        count++;
        //Console.WriteLine("addChToTries1 contact is {0}", contact);
        if(contact.Length == index)
        {
            return true;
        }
       // Console.WriteLine("addChToTries2 contact is {0}", contact.Length);
        
        char ch = contact[index];
        int childIndex = ch - 'a';
        Node child = getNode(childIndex);
        if(child == null)
        {
            child = new Node();
            setNode(childIndex, child);
           // Console.WriteLine("addChToTries3 contact is {0}", childIndex);
        }
        
        return child.addChToTries(contact, index + 1);
    }
    
    
    public int findContactCount(string contact)
    {
       return searchContactCountInTries(contact, 0);       
    }    
    
    int searchContactCountInTries(string contact, int index)
    {
        if(contact.Length  == index)
        {
            return count;
        }
        int charIndex = contact[index] - 'a';
        Node child = getNode(charIndex);
        if(child == null)
        {
            return 0;
        }
        
        return child.searchContactCountInTries(contact, index + 1);
    }
   
}
class Solution {
    
     public Node currentNode{get;set;}
    
    static void Main(String[] args) {
        int n = Convert.ToInt32(Console.ReadLine());
        
        Node currentNode = new Node();
        
        for(int a0 = 0; a0 < n; a0++){
            string[] tokens_op = Console.ReadLine().Split(' ');
            string op = tokens_op[0];
            string contact = tokens_op[1];
            
            if(op == "add")
            {
                if(contact. Length <= 21)
               currentNode.addNewContact(contact, 0);
            }
            else
            {
                Console.WriteLine(currentNode.findContactCount(contact));
            }
        }
    } 
}


